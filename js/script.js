// Task 1
// Выведите массив a1 на страницу.
//  a1 = {
//    3 : 'hello',
//    'one' : 'hi'
//  };

const a1 = {
    3: 'hello',
    'one': 'hi',
};

let out_1 = '';
for (let key in a1) {
    out_1 += key + '--' + a1[key] + '<br>';
}
document.querySelector('.out-1').innerHTML = out_1;

// Task 2
// Выведите на страницу элементы из масиива a2 у которых символов больше 4.

// a2 = {
//   3: 'hello',
//   'one': 'hi',
//   'testt': 'vodoley',
//   'ivan': 'ivanov'
// };

a2 = {
    3: 'hello',
    'one': 'hi',
    'testt': 'vodoley',
    'ivan': 'ivanov'
};

let out_2 = '';
for (let key in a2) {
    let a2_1 = a2[key].split('');
    if (a2_1.length > 4) {
        out_2 += a2[key] + '<br>';
    }
}
document.querySelector('.out-2').innerHTML = out_2;



// Task 3
// Выведите на страницу элементы из масиива a3 у которых ключ содержит больше 4 символов.

// a3 = {
//   3 : 'hello',
//   'one' : 'hi',
//   'testt' : 'vodoley',
//   'ivan' : 'ivanov'
//  };

a3 = {
    3: 'hello',
    'one': 'hi',
    'testt': 'vodoley',
    'ivan': 'ivanov'
};

let out_3 = '';
for (let key in a3) {
    let a3_1 = key.split('');
    if (a3_1.length > 4) {
        out_3 += key + '<br>';
    }
}
document.querySelector('.out-3').innerHTML = out_3;


// Task 4
// Выведите на страницу элементы из масиива a4 у которых значение - число.

// a4 = {
//  3 : 'hello',
//  'one' : 4,
//  'testt' : 'vodoley',
//  'ivan' : 6
// };

a4 = {
    3: 'hello',
    'one': 4,
    'testt': 'vodoley',
    'ivan': 6
};

let out_4 = '';
for (let key in a4) {
    let a4_1 = a4[key];
    if (isNaN(a4_1) == false) {
        out_4 += key + ' -- ' + a4[key] + '<br>';
    }
}
document.querySelector('.out-4').innerHTML = out_4;

// Task 5
//Дан ассоциативный массив a5. Найдите сумму элементов находящихся в нем.

// a5 = {
//   a : 7,
//   z : 4,
//   45 : 12,
//   f : 6
//  };

a5 = {
    a: 7,
    z: 4,
    45: 12,
    f: 6
};

let summ = 0;
for (let key in a5) {
    summ += +a5[key];
}
document.querySelector('.out-5').innerHTML = summ;

// Task 6
// Создайте ассоциативный массив a6, который содержит ключи name, age, sex, height и значения любого персонажа. Выведите массив на страницу.

// Task 7
// Создайте ассоциативный массив a7, два input (u7-key__input, u7-value__input) и кнопку. При нажатии кнопки добавляйте в массив новое значение с соответствующим ключем. Выводите массив на страницу.

// Task 8
//Добавьте к предыдущей задачи input.u8-key__input и кнопку. При нажатии кнопки - удаляйте значение с соответствующим ключем. Выводите массив на страницу.

// Task 9
// Добавьте к предыдущей задачи input.u9-delete-value__input и кнопку. При нажатии кнопки - удаляйте записи с соответствующим значением. Выводите массив на страницу.


// Task 10
// Добавьте к предыдущей задачи input.u10-has-key__input и кнопку. При нажатии кнопки - возвращайте true если такой ключ есть в массиве, и false если нет.

// Task 11
// Создайте массив, который описывает метро киевского метрополитена, выведите его на страницу.

// a11 = {
// 	"red" : ['Академгородок',...],
// 	"green" : 
// }

// Task 12
// Добавьте к предыдущей задаче select.u12-branch и кнопку. Пользователь может выбрать цвет ветки и нажать кнопку, после чего на страницу будут выведены только станции данной ветки.

// Task 13
// Добавьте к предыдущей задаче кнопку button.u13-reverse которая при нажатии выводит станции ветки в обратном порядке. Внимание! Все подобные задачи не меняют массив, а меняют только вывод!!!



// Task 14
// Добавьте к предыдущей задаче select.u14-find-station и кнопку. В select - пользователь может выбрать станцию, а вы перебирая массив - вывести ветку на которой эта станция находится.

// Task 15
// Добавьте к предыдущему заданию 2 select где пользователь может выбрать 2 станции, и если они на одной ветке - то по нажатию на кнопку будет показано сколько станций между ними (сами станции не включаем. Если это соседние станции - то 0).

// Task 16
// Добавьте 3 radiobutton.u16-radio которые содержат value = red, green, blue - в соотвтествии с цветом веток метро. Добавьте пустой select.u16-select. При выборе radio - программа должна в select добавлять option с названиями станций метро. Т.е. выбрали radio(value="green") то внутрь select должны быть записаны option со станциями зеленой ветки. Выбрали red - select должен быть очищен и добавлены option со станциями красной ветки.

// Task 17
// ССоздайте массив, который описывает метро киевского метрополитена и обозначаются конечные и станции перехода, выведите его на страницу. Конечные - обозначать 0, перехода - 1.

// la17 = {
// 	"red" : [ ['Академгородок', 0] ,...],
// 	"green" : 
// }

// Task 18
// Выведите на страницу только станции с переходами из массива a17.

// Task 19
// Создайте ассоциативный массив где ключами являются страны азии, а вложенными массивами - ассоциативный массив содержащий название столицы, количество населения, площадь. Выведите его на страницу.

// Task 20
// Дополните массив из задачи 19 так, чтобы пользователь мог сам выбирать страну в select, а необходимая информация подтягивалась на страницу.